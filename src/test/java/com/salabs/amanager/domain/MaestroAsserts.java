package com.salabs.amanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaestroAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaestroAllPropertiesEquals(Maestro expected, Maestro actual) {
        assertMaestroAutoGeneratedPropertiesEquals(expected, actual);
        assertMaestroAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaestroAllUpdatablePropertiesEquals(Maestro expected, Maestro actual) {
        assertMaestroUpdatableFieldsEquals(expected, actual);
        assertMaestroUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaestroAutoGeneratedPropertiesEquals(Maestro expected, Maestro actual) {
        assertThat(expected)
            .as("Verify Maestro auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaestroUpdatableFieldsEquals(Maestro expected, Maestro actual) {
        assertThat(expected)
            .as("Verify Maestro relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getApellidos()).as("check apellidos").isEqualTo(actual.getApellidos()))
            .satisfies(e -> assertThat(e.getContacto()).as("check contacto").isEqualTo(actual.getContacto()))
            .satisfies(e -> assertThat(e.getActivo()).as("check activo").isEqualTo(actual.getActivo()))
            .satisfies(e -> assertThat(e.getSucursalId()).as("check sucursalId").isEqualTo(actual.getSucursalId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaestroUpdatableRelationshipsEquals(Maestro expected, Maestro actual) {
        assertThat(expected)
            .as("Verify Maestro relationships")
            .satisfies(e -> assertThat(e.getSucursal()).as("check sucursal").isEqualTo(actual.getSucursal()));
    }
}
